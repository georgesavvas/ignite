"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[364],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8821:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={title:"Basic Concepts",sidebar_position:2},s="Basic Concepts",i={unversionedId:"basic_concepts",id:"basic_concepts",title:"Basic Concepts",description:"Introduction",source:"@site/docs/basic_concepts.md",sourceDirName:".",slug:"/basic_concepts",permalink:"/docs/basic_concepts",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Basic Concepts",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/getting_started"},next:{title:"Python API",permalink:"/docs/Developer/python_api"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Overview",id:"overview",level:2},{value:"Asset Builds",id:"asset-builds",level:3},{value:"Shots",id:"shots",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"basic-concepts"},"Basic Concepts"),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Ignite works directly with the file system when it comes to project structure.\nThere is no database in between which allows you to make manual changes.\nThere are a few restrictions though so it is recommended you work through the UI\nas much as you can."),(0,a.kt)("p",null,"Each directory can be one of the following types:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/glossary#directory"},"Directory")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/glossary#project"},"Project")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/glossary#group"},"Group")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/glossary#build"},"Build")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/glossary#task"},"Task")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/glossary#asset"},"Asset")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/glossary#assetversion"},"Assetversion")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/glossary#shot"},"Shot"))),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"The recommended structure is that each project is sectioned into at least a\ncouple of ",(0,a.kt)("em",{parentName:"p"},"Groups"),".\nOne of them should be used for asset builds and the other one for shots.\nUltimately you will be creating scenes and exporting assets within ",(0,a.kt)("em",{parentName:"p"},"Tasks"),", but\nit is advisable you nest these into further ",(0,a.kt)("em",{parentName:"p"},"Directories")," for organisational\npurposes."),(0,a.kt)("h3",{id:"asset-builds"},"Asset Builds"),(0,a.kt)("p",null,"Each asset build should be in its own ",(0,a.kt)("em",{parentName:"p"},"Build")," directory and should contain\nthe following ",(0,a.kt)("em",{parentName:"p"},"Tasks"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'For a single artist setup you can do all the work within a single "Asset"\n',(0,a.kt)("em",{parentName:"p"},"Task"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"For multiple artists or a department-like setup you can create multiple\n",(0,a.kt)("em",{parentName:"p"},"Tasks"),' like "Model", "Surface" and "FX".\nEach one of these will have their own exports and a final "Asset" ',(0,a.kt)("em",{parentName:"p"},"Task")," can be used to composite everything together and export the final asset build."))),(0,a.kt)("p",null,"If you wish to categorise your asset builds, for example \u201cvehicles\u201d \u201cbuildings\u201d\n\u201ccharacters\u201d etc, you should use the generic ",(0,a.kt)("em",{parentName:"p"},"Directory")," type directories inside\nyour asset builds ",(0,a.kt)("em",{parentName:"p"},"Group")," (same for any further sub-categories) and create your ",(0,a.kt)("em",{parentName:"p"},"Builds")," within them."),(0,a.kt)("h3",{id:"shots"},"Shots"),(0,a.kt)("p",null,"Shot ",(0,a.kt)("em",{parentName:"p"},"Tasks")," should live inside ",(0,a.kt)("em",{parentName:"p"},"Shot")," directories, with the shot nesting\ndepending on your output expectations. You should use the generic ",(0,a.kt)("em",{parentName:"p"},"Directory"),"\ntype directories for anything in-between ",(0,a.kt)("em",{parentName:"p"},"Groups")," and ",(0,a.kt)("em",{parentName:"p"},"Shots"),". Here\u2019s a few\nexamples of how you can structure your shots:\nShots\nE01\n0010\n0020\n0030\nE02\n0010\n0020\n0030\nShots\nS01\nE01\n0010\n0020\n0030\nShots\nSEQ02\n0010\n0020\n0030\nSEQ01\n0010\n0020\n0030"))}u.isMDXComponent=!0}}]);